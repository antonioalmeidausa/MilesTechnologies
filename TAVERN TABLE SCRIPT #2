DROP TABLE IF EXISTS RATS;
DROP TABLE IF EXISTS GUEST_STATUS;
DROP TABLE IF EXISTS GUEST_LEVELS;
DROP TABLE IF EXISTS GUEST_CLASSES;
DROP TABLE IF EXISTS INVENTORY;
DROP TABLE IF EXISTS SUPPLY_RECEIVED;
DROP TABLE IF EXISTS SUPPLY_SALE;
DROP TABLE IF EXISTS SERVICE_SALE;
DROP TABLE IF EXISTS SUPPLIES;
DROP TABLE IF EXISTS SERVICES;
DROP TABLE IF EXISTS SERVICES_STATUS;
DROP TABLE IF EXISTS GUESTS;
DROP TABLE IF EXISTS TAVERN;
DROP TABLE IF EXISTS LOCATION;
DROP TABLE IF EXISTS OWNER;
DROP TABLE IF EXISTS ROLES;



CREATE TABLE ROLES 
    (
        ROLE_ID INT PRIMARY KEY IDENTITY (1, 1), 
        ROLE_DESCRIPTION VARCHAR(100) NOT NULL
    );


CREATE TABLE OWNER 
    (
        OWNER_ID INT PRIMARY KEY IDENTITY (1, 1), 
        NAME VARCHAR(100) NOT NULL, 
        ROLE_ID INT
    );

ALTER TABLE OWNER
ADD FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ROLE_ID);    

CREATE TABLE LOCATION 
    (
        LOCATION_ID INT PRIMARY KEY IDENTITY (1, 1), 
        LOCATION_DESCRIPTION VARCHAR(100) NOT NULL
    );

CREATE TABLE TAVERN 
    (
        TAVERN_ID INT PRIMARY KEY IDENTITY (1, 1), 
        TAVERN_NAME VARCHAR(100) NOT NULL, 
        OWNER_ID INT, 
        TAVERN_ADDRESS INT
    );

ALTER TABLE TAVERN 
ADD FOREIGN KEY (OWNER_ID) REFERENCES OWNER(OWNER_ID);

ALTER TABLE TAVERN
ADD FOREIGN KEY (TAVERN_ADDRESS) REFERENCES LOCATION(LOCATION_ID);    

CREATE TABLE RATS 
    (
        RATS_ID INT PRIMARY KEY IDENTITY (1,1), 
        RATS_NAME VARCHAR(100) NOT NULL, 
        TAVERN_ID INT FOREIGN KEY REFERENCES TAVERN(TAVERN_ID)
    );

-- DROPPING TABLE RATS PER REQUEST ON CLASS #2

DROP TABLE IF EXISTS RATS;


CREATE TABLE SERVICES_STATUS
    (
        STATUS_ID INT PRIMARY KEY IDENTITY (1, 1), 
        STATUS_DESCRIPTION VARCHAR(50) NOT NULL
    );

CREATE TABLE SERVICES 
    (
        SERVICE_ID INT PRIMARY KEY IDENTITY (1, 1),
        TAVERN_ID INT FOREIGN KEY REFERENCES TAVERN(TAVERN_ID),
        SERVICE_NAME VARCHAR (100) NOT NULL, 
        SERVICE_STATUS INT FOREIGN KEY REFERENCES SERVICES_STATUS(STATUS_ID),
        SERVICE_PRICE DECIMAL(10, 2)  NOT NULL
    );

CREATE TABLE GUEST_STATUS
    (
        GUEST_STATUS_ID INT PRIMARY KEY IDENTITY (1, 1),
        GUEST_STATUS_NAME VARCHAR(50) NOT NULL
    );

CREATE TABLE GUEST_CLASSES
    (
        CLASS_ID INT PRIMARY KEY IDENTITY (1, 1),
        CLASS_NAME VARCHAR (50) NOT NULL
    );

CREATE TABLE GUEST_LEVELS
    (
        LEVEL_ID INT PRIMARY KEY IDENTITY (1, 1),
        LEVEL INT NOT NULL,
        CLASS INT FOREIGN KEY REFERENCES GUEST_CLASSES(CLASS_ID)
    );


CREATE TABLE GUESTS 
    (
        GUEST_ID INT PRIMARY KEY IDENTITY (1, 1),
        GUEST_NAME VARCHAR(100) NOT NULL,
        GUEST_NOTES VARCHAR(100), 
        BIRTHDAY DATE NOT NULL,
        CAKEDAYS DATE NOT NULL, 
        
        
    );

CREATE TABLE SUPPLIES
    (
        SUPPLY_ID INT PRIMARY KEY IDENTITY (1, 1),
        SUPPLY_NAME VARCHAR(100) NOT NULL, 
        SUPPLY_UNIT VARCHAR(50) NOT NULL 
    );

CREATE TABLE INVENTORY
    (
        INVENTORY_ID INT PRIMARY KEY IDENTITY (1, 1), 
        SUPPLY_ID INT FOREIGN KEY REFERENCES SUPPLIES(SUPPLY_ID),
        TAVERN_ID INT FOREIGN KEY REFERENCES TAVERN(TAVERN_ID),
        DATE_UPDATED DATETIME NOT NULL DEFAULT GETDATE(), 
        CURRENT_COUNT DECIMAL (10, 2) NOT NULL 
    );

CREATE TABLE SUPPLY_RECEIVED
    (
        TAVERN_ID INT FOREIGN KEY REFERENCES TAVERN(TAVERN_ID),
        SUPPLY_ID INT FOREIGN KEY REFERENCES SUPPLIES(SUPPLY_ID),
        COST DECIMAL (10, 2) NOT NULL, 
        COUNT DECIMAL (10, 2) NOT NULL, 
        DATE_RECEIVED DATETIME NOT NULL DEFAULT GETDATE()
    );

CREATE TABLE SUPPLY_SALE
    (
        SUPPLY_SALE_ID INT PRIMARY KEY IDENTITY (1, 1), 
        GUEST_ID INT FOREIGN KEY REFERENCES GUESTS(GUEST_ID),
        TAVERN_ID INT FOREIGN KEY REFERENCES TAVERN(TAVERN_ID),
        SUPPLY_ID INT FOREIGN KEY REFERENCES SUPPLIES(SUPPLY_ID), 
        PRICE DECIMAL (10, 2) NOT NULL, 
        SALE_DATE DATETIME NOT NULL DEFAULT GETDATE(), 
        QUANTITY DECIMAL (10, 2) NOT NULL
    );

CREATE TABLE SERVICE_SALE
    (
        SERVICE_SALE_ID INT PRIMARY KEY IDENTITY (1, 1), 
        GUEST_ID INT FOREIGN KEY REFERENCES GUESTS(GUEST_ID),
        TAVERN_ID INT FOREIGN KEY REFERENCES TAVERN(TAVERN_ID),
        SERVICE_ID INT FOREIGN KEY REFERENCES SERVICES(SERVICE_ID), 
        SALE_DATE DATETIME NOT NULL DEFAULT GETDATE(), 
        QUANTITY DECIMAL (10, 2) NOT NULL
    );

    INSERT INTO ROLES (ROLE_DESCRIPTION)
VALUES 
    ('OWNER'),
    ('PARTNER'),
    ('ADMINISTRATOR');

INSERT INTO OWNER (NAME, ROLE_ID)
VALUES 
    ('JOHN DOE', 1),
    ('SUSAN DOE', 2),
    ('BOB SMITH', 3),
    ('TRAVIS PARKER', 1),
    ('CHELSEA COX', 1);

INSERT INTO LOCATION
VALUES 
    ('LOS ANGELES, CA'),
    ('BOSTON, MA'), 
    ('HOUSTON, TX'), 
    ('MIAMI, FL'),
    ('NASHVILLE, TN');

INSERT INTO TAVERN (TAVERN_NAME, OWNER_ID, TAVERN_ADDRESS)
VALUES 
    ('STAR', 1, 2),
    ('MOON', 2, 2),
    ('SUN', 3, 4),
    ('UNIVERSE', 4, 5),
    ('LIGHTNING', 5, 4);

-- DEMONSTRATE THE ERROR WHEN TRYING TO INSERT WITH FOREIGN KEY CONSTRAINT

-- INSERT INTO TAVERN (TAVERN_NAME, OWNER_ID, TAVERN_ADDRESS)
-- VALUES
--     ('SPACE X', 8, 7);  

INSERT INTO SERVICES_STATUS (STATUS_DESCRIPTION)
VALUES 
    ('ACTIVE'),
    ('INACTIVE'),
    ('CLOSED'),
    ('TEMPORARILY CLOSED');

INSERT INTO SERVICES (TAVERN_ID, SERVICE_NAME, SERVICE_STATUS, SERVICE_PRICE)
VALUES 
    (1, 'POOL', 1, 25.00),
    (2, 'SHOOTING', 1, 50.00),
    (3, 'HUNTING', 2, 30.00),
    (4, 'DANCE', 3, 10.00),
    (5, 'DRINK', 1, 5.00);

INSERT INTO GUEST_STATUS (GUEST_STATUS_NAME)
VALUES 
    ('HAPPY'),
    ('DISSAPOINTED'),
    ('ANGRY'),
    ('TIRED'),
    ('HURT');

INSERT INTO GUEST_CLASSES (CLASS_NAME)
VALUES 
    ('MAGE'),
    ('FIGHTER'),
    ('SHOOTER'),
    ('MEDIC'),
    ('LEADER');

INSERT INTO GUEST_LEVELS (LEVEL, CLASS)
VALUES 
    (1, 1),
    (2, 2),
    (3, 3),
    (4, 4),
    (5, 5);

   

INSERT INTO GUESTS (GUEST_NAME, GUEST_NOTES, BIRTHDAY, CAKEDAYS)
VALUES 
    ('CHANDLER BING', 'MALE', '1980-11-25', '1980-11-25'),
    ('BRADY SMITH', 'MALE', '1980-11-25', '1980-11-25'),
    ('CELINE DION', 'FEMALE', '1980-11-25', '1980-11-25'),
    ('MATT SCOTT', 'MALE', '1980-11-25', '1980-11-25'),
    ('BRETT MONROE', 'FEMALE', '1980-11-25', '1980-11-25');

INSERT INTO SUPPLIES (SUPPLY_NAME, SUPPLY_UNIT)
VALUES 
    ('VODKA', 'OUNCES'),
    ('BOURBON', 'LITERS'),
    ('GIN', 'OUNCES'),
    ('WATER', 'BOTTLE'),
    ('SPARKLING WATER', 'BOTTLE');

INSERT INTO INVENTORY (SUPPLY_ID, TAVERN_ID, DATE_UPDATED, CURRENT_COUNT)
VALUES 
    (1, 3, GETDATE(), 200),
    (2, 4, GETDATE(), 30),
    (3, 2, GETDATE(), 150),
    (4, 1, GETDATE(), 30),
    (5, 5, GETDATE(), 25);

INSERT INTO SUPPLY_RECEIVED (TAVERN_ID, SUPPLY_ID, COST, COUNT, DATE_RECEIVED)
VALUES 
    (1, 1, 5.00, 25, GETDATE()),
    (2, 3, 6.00, 30, GETDATE()),
    (3, 3, 4.00, 40, GETDATE()),
    (4, 4, 3.00, 20, GETDATE()),
    (5, 2, 4.00, 10, GETDATE());

INSERT SUPPLY_SALE (GUEST_ID, TAVERN_ID, SUPPLY_ID, PRICE, SALE_DATE, QUANTITY)
VALUES 
    (1, 1, 3, 10.00, GETDATE(), 1.00),
    (2, 3, 4, 11.00, GETDATE(), 1.00),
    (2, 4, 3, 9.00, GETDATE(), 1.00),
    (4, 5, 5, 7.00, GETDATE(), 1.00),
    (5, 2, 1, 8.00, GETDATE(), 1.00);

INSERT SERVICE_SALE (GUEST_ID, TAVERN_ID, SERVICE_ID, SALE_DATE, QUANTITY)
VALUES 
    (3, 1, 2, GETDATE(), 1.00),
    (2, 3, 3, GETDATE(), 2.00),
    (1, 5, 4, GETDATE(), 1.00),
    (4, 4, 3, GETDATE(), 1.00),
    (4, 2, 1, GETDATE(), 2.00); 